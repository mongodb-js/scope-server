# Evergreen CI configuration
# Derived from sample at https://github.com/evergreen-ci/evergreen/blob/master/config_dev/project/sample.yml

stepback: false

pre:
- command: shell.track

post:
- command: shell.cleanup

#######################################
#            Functions                #
#######################################

functions:
  "fetch source" :
    - command: git.get_project
      params:
        directory: src
    - command: git.apply_patch
      params:
        directory: src
  "download mongodb on windows" :
    command: shell.exec
    params:
      working_dir: src
      script: |
        set -o verbose
        rm -rf mongodb
        cd "/cygdrive/c/Program Files (x86)"
        mkdir mongodb
        cd mongodb
        curl -s ${mongo_url} --output mongodb.tgz
        ${decompress} mongodb.tgz
        chmod +x ./mongodb-*/bin/*
        mv ./mongodb-*/bin/* .
  "npm install" :
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          export PATH="$PATH:${add_path|}"
          test -n "${add_environment|}" && export "${add_environment|}"
          ${node|node} --version
          ${npm|npm} --version
          ${npm|npm} install
  "npm test" :
    - command: shell.exec
      params:
        working_dir: src
        continue_on_err: false
        script: |
          set -o verbose
          export PATH="$PATH:${add_path|}"
          test -n "${add_environment|}" && export "${add_environment|}"
          ${npm|npm} run check
          ${npm|npm} run ci -- -- -- -R mocha-evergreen-reporter || true
          ${npm|npm} run posttest || true
  "attach results":
    - command: attach.results
      params:
        file_location: src/report.json
  # "npm release" :
  #   - command: shell.exec
  #     params:
  #       working_dir: src
  #       script: |
  #         set -o errexit
  #         set -o verbose
  #         export PATH="$PATH:${add_path|}"
  #         test -n "${add_environment|}" && export "${add_environment|}"
  #         ${npm|npm} run release

#######################################
#               Tasks                 #
#######################################

tasks:
- name: compile windows
  depends_on: []
  commands:
  - func: "fetch source"
  - func: "download mongodb on windows"
  - func: "npm install"
  - func: "npm test"
  - func: "attach results"

- name: compile mac
  depends_on: []
  commands:
  - func: "fetch source"
  - func: "npm install"
  - func: "npm test"
  - func: "attach results"
  # - func: "npm release"
  # - command: s3.put
  #   params:
  #     aws_key: ${aws_key}
  #     aws_secret: ${aws_secret}
  #     local_file: "src/dist/${installer_filename}"
  #     remote_file: "mongodbjs-scout-server/${build_variant}/${revision}/${installer_filename}"
  #     bucket: mciuploads
  #     permissions: public-read
  #     content_type: ${installer_content_type|application/octet-stream}
  #     display_name: "Installer: ${installer_filename}"

# - name: test
#   depends_on:
#   - name: compile
#   commands:
#   - func: "npm test"


#######################################
#           Buildvariants             #
#######################################

buildvariants:
- name: osx-108
  display_name: OS X 10.8
  modules: ~
  run_on:
  - "osx-108"
  expansions:
    <<: *mongo_url_osx108
    add_path: /opt/node/bin
    # installer_filename: "MongoDB Scout.dmg"
    num_cores: $(sysctl -n hw.logicalcpu)
  tasks:
  - name: compile mac

- name: windows-64
  display_name: Windows 64-bit
  modules: ~
  run_on:
  - "windows-64-vs2013-test"
  expansions:
    <<: *mongo_url_windows64_enterprise
    build_tags: -tags "ssl"
    edition: ssl
    add_environment: "APPDATA=C:\\Program Files (x86)\\nodejs\\node_modules"
    add_path: "/cygdrive/c/Program Files (x86)/nodejs:/cygdrive/c/Program Files (x86)/mongodb"
    # installer_filename: "MongoDB Scout.exe"
    exe: ".exe"
    num_cores: $(grep -c ^processor /proc/cpuinfo)
  tasks:
  - name: compile windows

## ubuntu buildvariant is ready to go when we're ready to add tasks/linux.js

# - name: ubuntu
#   display_name: Ubuntu
#   modules: ~
#   run_on:
#   - "ubuntu1404-test"
#   expansions:
#     add_environment: ""
#     add_path: "/opt/node/bin"
#     compile_env: CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
#     num_cores: $(grep -c ^processor /proc/cpuinfo)
#   tasks:
#   - name: compile
#   # - name: test


## Common download URLs (merge in as hashes)
  mongo_download_urls:
    osx_108: &mongo_url_osx108
      mongo_os: "osx"
      mongo_url: "https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-latest.tgz"
      mongo30_url: "https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-3.0.2.tgz"
      mongo26_url: "https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-2.6.5.tgz"
      mongo24_url: "https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-2.4.12.tgz"
    linux_64_bit: &mongo_url_ubuntu1204
      mongo_os: "ubuntu1204"
      mongo_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1204-latest.tgz"
      mongo30_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1204-3.0.2.tgz"
      mongo26_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1204-2.6.5.tgz"
      mongo24_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-subscription-ubuntu1204-2.4.12.tgz"
    linux_64_bit_enterprise: &mongo_url_ubuntu1204_enterprise
      mongo_os: "ubuntu1204"
      mongo_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1204-latest.tgz"
      mongo30_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1204-3.0.2.tgz"
      mongo26_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-enterprise-ubuntu1204-2.6.5.tgz"
      mongo24_url: "http://downloads.10gen.com/linux/mongodb-linux-x86_64-subscription-ubuntu1204-2.4.12.tgz"
    windows_64_bit: &mongo_url_windows64
      mongo_os: "windows-64"
      mongo_url: "https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-latest.zip"
      mongo30_url: "https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-3.0.2.zip"
      mongo26_url: "https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-2.6.5.zip"
      mongo24_url: "https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-2.4.12.zip"
    windows_64_bit_enterprise: &mongo_url_windows64_enterprise
      mongo_os: "windows-64"
      mongo_url: "http://downloads.10gen.com/win32/mongodb-win32-x86_64-enterprise-windows-64-latest.zip"
      mongo30_url: "http://downloads.10gen.com/win32/mongodb-win32-x86_64-enterprise-windows-64-3.0.2.zip"
      mongo26_url: "http://downloads.10gen.com/win32/mongodb-win32-x86_64-enterprise-windows-64-2.6.5.zip"
